/*----------------------------------------------------------------
// Copyright (C) MickelZhang
// License:MIT
// 文件名：example.cpp
// 文件功能描述：菜鸟教程中一些实例,
// 创建者：MickelZhang
// 时间：2020/12/16
// 修改人：
// 时间：
// 修改说明：
// 软件版本：VS2015
//----------------------------------------------------------------*/
#include <iostream>
using namespace std;

/*-----------------------------------------------------------------
// 输入：天数
// 输出：第n天的桃子数
// 功能描述：猴子第一天摘下若干个桃子，当即吃了一半，还不过瘾，又多吃了一个。
            第二天又将剩下的桃子吃掉了一半，又多吃了一个。以后每天将前一天剩下的桃子吃掉一半，再多吃一个。
            直到第十天只剩下一个桃子了，求第一天共摘了多少个桃子
// 作者：MickelZhang
// 日期：2020/12/16
// 修改人：
// 记录：
// 修改人：
// 记录：
// 版本：递归思想 
-----------------------------------------------------------------*/
int TheMonkeyEatPeach1(int n)
{
	if (n>10)
	{
		return 1;
	}
	else
	{
		return (TheMonkeyEatPeach1(n+1)+1)*2;
	}
}

// for循环思想
int TheMonkeyEatPeach2()
{
	int i,s=1;
	// 一共吃了9天
	for(i=0; i<9;i++) 
	{
		s = (s + 1) * 2; // 倒序计算每天的数量
	}
	return s;
}

// for TheMonkeyEatPeach1 test:
/* 
int i ;
for (i = 1; i <= 10; i++)
{
  printf("第 %d 天桃子数：%d \n", i, TheMonkeyEatPeach1(i));
}
*/

/*-----------------------------------------------------------------
// 输入：number
// 输出：0表示number是偶数,1表示number为奇数
// 功能描述：
// 作者：MickelZhang
// 日期：2020/12/16
// 修改人：
// 记录：
// 修改人：
// 记录：
// 版本：用逻辑操作符&，或者采用%2，去余数
-----------------------------------------------------------------*/
int IsOddNumber1(int number)
{
	if (number&1)
	{
		return 1;
	}
	else
	{
		return 0;
	}
}

// 推荐采用bool类型做为返回值
bool IsOddNumber2(int number)
{
	if (number&1)
	{
		return true;
	}
	else
	{
		return false;
	}
}

/*-----------------------------------------------------------------
// 输入：number
// 输出：阶乘
// 功能描述：求一个数的阶乘
// 作者：MickelZhang
// 日期：2020/12/16
// 修改人：
// 记录：
// 修改人：
// 记录：
// 版本：递归思想求解决问题，找到递归结束的条件
-----------------------------------------------------------------*/
int Factorial(int number)
{
	if(number==1)
	{
		return 1;
	}
	else
	{
		return Factorial(number-1)*number;
	}
}

/*-----------------------------------------------------------------
// 输入：x，y
// 输出：
// 功能描述：求x和y的最大公因数
// 作者：MickelZhang
// 日期：2020/12/16
// 修改人：
// 记录：
// 修改人：
// 记录：
// 版本：更相减损法，辗转相除法，（递归方法暂时不考虑）
-----------------------------------------------------------------*/
int GetMaxNumberOfFactor1(int x, int y)
{
/*
  1.先判断两个数的大小，如果两数相等，则这个数本身就 是就是它的最大公约数。
  2.如果不相等，则用大数减去小数，然后用这个较小数与它们相减的结果相比较，
	如果相等，则这个差就是它们的最大公约数，而如果不相等，则继续执行2操作。
*/
	while(1)
	{
		if(x > y)
		{
			x -= y;
		}
		else if(x < y)
		{
			y -= x; 
		}
		else
		{
			return x;
		}
	}
}

int GetMaxNumberOfFactor2(int x, int y)
{
/*
1.当两个数相等时，其中任意一个就是它们的最大公约数，因为它们的余数为0；
2.当两个数不相等时，用较大数除以较小数，当余数不为0时，这时
  使较小数作为被除数，余数作为除数，继续2的操作，直至余数为0,
  也就是这两个数相等时，其中任一数为最大公约数
*/
	while(x * y)  // while条件用的好
	{
		if(x > y)
		{
			x %= y; 
		}
		else if(x < y)
		{
			y %= x; 
		}
		else
		{
			return x;
		}
	}
}

/*-----------------------------------------------------------------
// 输入：x，y
// 输出：
// 功能描述：求x和y的最小公倍数
// 作者：MickelZhang
// 日期：2020/12/16
// 修改人：
// 记录：
// 修改人：
// 记录：
// 版本：
-----------------------------------------------------------------*/
int GetMinNumberOfCommonMultiple(int x, int y)
{
	return x*y/GetMaxNumberOfFactor2(x,y);  // 在最大公因数的基础上进行下一步操作
}

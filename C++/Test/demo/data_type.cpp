/*----------------------------------------------------------------
// Copyright (C) MickelZhang
// License:MIT
// 文件名：data_type.cpp
// 文件功能描述：菜鸟教程函数部分
// 创建者：MickelZhang
// 时间：2020/12/15
// 修改人：
// 时间：
// 修改说明：
// 软件版本：VS2015
//----------------------------------------------------------------*/

/*
内置函数的使用头文件为：<cmath>
随机数：rand   srand
*/
#include <iostream>
#include <ctime>
#include <cstdlib>
using namespace std;
#include <iomanip>
using std::setw;

/*-----------------------------------------------------------------
// 输入：
// 输出：
// 功能描述：随机数的使用
// 作者：MickelZhang
// 日期：2020/12/14
// 修改人：
// 记录：
// 修改人：
// 记录：
// 版本：
-----------------------------------------------------------------*/
void RandomNumber()
{
	int i, j;

	// 设置种子
	srand((unsigned)time(NULL));

	/* 生成 10 个随机数 */
	for (i = 0; i < 10; i++)
	{
		// 生成实际的随机数
		j = rand();
		cout << "随机数： " << j << endl;
	}
}

/*
数组存储一个固定大小的相同类型的元素的顺序集合
double blance[10]; // 声明一个类型为double类型，包含10个元素的数组
初始化
访问元素
多维数组： int threedim[5][10][4];//三维数组
	二维数组比较常见，行和列
	//int a[3][4] = {0,1,2,3,4,5,6,7,8,9,10,11}; // 通过索引访问数组

指向指针的数组 可以通过指定不带索引的数组名称来生成一个指向数组中第一个元素的指针。
	数组名是指向数组中第一个元素的常量指针
	double array[50]; // array是一个指向&array[0]的指针，即数组array的第一个元素的地址
	double *p;
	p = array; // 将p复制为array第一个元素的地址
	

传递数组给函数 可以通过指定不带索引的数组名称来给函数传递一个指向数组的指针
从函数返回数组
*/

/*-----------------------------------------------------------------
// 输入：
// 输出：
// 功能描述：数组测试
// 作者：MickelZhang
// 日期：2020/12/15
// 修改人：
// 记录：
// 修改人：
// 记录：
// 版本：
-----------------------------------------------------------------*/
void ArrayTest()
{
	int n[10]; // n 是一个包含 10 个整数的数组

			   // 初始化数组元素          
	for (int i = 0; i < 10; i++)
	{
		n[i] = i + 100; // 设置元素 i 为 i + 100
	}
	cout << "Element" << setw(13) << "Value" << endl;

	// 输出数组中每个元素的值                     
	for (int j = 0; j < 10; j++)
	{
		cout << setw(7) << j << setw(13) << n[j] << endl;
	}
}

/*
字符串
C风格: 实际是字符数组  本质数组
char greeting[6] = {'H','E','L','L','O','\n'} //末尾存储了空字符
或者 ：char greeting2 = "hello"
处理字符串的函数
C++风格：string
*/
